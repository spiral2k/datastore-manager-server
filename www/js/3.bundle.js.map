{"version":3,"sources":["webpack:///./src/api/request.js","webpack:///./src/api/gae.js","webpack:///./src/components/Input/Input.jsx","webpack:///./src/components/Button/Button.jsx","webpack:///./src/components/Select/Select.jsx","webpack:///./src/redux/reducers/form/actions.js","webpack:///./src/redux/reducers/terminal/actions.js","webpack:///./src/containers/Form/Form.jsx","webpack:///./src/components/Image/Image.jsx","webpack:///./src/containers/Terminal/Terminal.jsx","webpack:///./src/pages/App/App.jsx"],"names":["defaultHeaders","url","method","data","headers","dataOrParams","includes","axios","request","then","res","Promise","resolve","e","reject","Input","type","placeholder","value","onChange","className","propTypes","PropTypes","string","func","isRequired","defaultProps","Button","text","onClick","preventDefault","Select","options","map","option","key","arrayOf","setValues","values","Constants","SET_FORM_VALUES","payload","setString","SET_NEW_TERMINAL_STRING","Form","dispatch","name","getCallData","handleSubmit","a","callData","TerminalActions","setTimeout","GAEApi","FormActions","target","connect","state","form","Image","src","alt","PropType","calc","x","y","window","innerHeight","innerWidth","trans","s","Terminal","strings","endRef","useRef","useSpring","xys","config","mass","tension","friction","springProps","setSpringProps","useEffect","current","scrollIntoView","behavior","div","onMouseMove","clientX","clientY","onMouseLeave","style","transform","interpolate","str","i","ref","terminal","App","initTerminal","useCallback","Store"],"mappings":"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","file":"js/3.bundle.js","sourcesContent":["import axios from 'axios'\n\nconst defaultHeaders = { 'Content-Type': 'application/json' }\n\n// generic request handler, optionally: can update the fetchStatus of the call\nexport default ({ url, method, data = {}, headers = defaultHeaders }) => {\n    const dataOrParams = ['GET', 'DELETE'].includes(method) ? 'params' : 'data'\n\n    return axios\n        .request({\n            url,\n            method,\n            headers,\n            [dataOrParams]: data,\n        })\n        .then(res => Promise.resolve(res.data))\n        .catch(e => Promise.reject(e))\n}\n","import request from '@request'\n\nconst get = url =>\n    request({\n        url,\n        method: 'GET',\n    })\n\nexport default { get }\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './Input.scss'\n\nconst Input = ({ type, placeholder, value, onChange }) => (\n    <input type={type} className=\"input\" value={value} placeholder={placeholder} onChange={onChange} />\n)\n\nInput.propTypes = {\n    type: PropTypes.string,\n    onChange: PropTypes.func,\n    placeholder: PropTypes.string,\n    value: PropTypes.string.isRequired,\n}\n\nInput.defaultProps = {\n    onChange: () => {},\n    type: 'text',\n    placeholder: '',\n}\n\nexport default Input\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './Button.scss'\n\nconst Button = ({ text, onClick, className }) => {\n    const handleClick = e => {\n        e.preventDefault()\n        onClick(e)\n    }\n\n    return (\n        <button type=\"button\" onClick={handleClick} className={`button ${className}`}>\n            {text}\n        </button>\n    )\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    onClick: PropTypes.func,\n    className: PropTypes.string,\n}\n\nButton.defaultProps = {\n    text: 'no text',\n    onClick: () => {},\n    className: '',\n}\n\nexport default Button\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './Select.scss'\n\nfunction Select({ options, value, onChange }) {\n    return (\n        <select value={value} onChange={onChange} className=\"select\">\n            {options.map(option => (\n                <option key={option} value={option}>\n                    {option}\n                </option>\n            ))}\n        </select>\n    )\n}\n\nSelect.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n}\n\nSelect.defaultProps = {\n    value: '',\n    onChange: () => {},\n}\n\nexport default Select\n","/* constants */\nimport Constants from './constants'\n\nexport const setValues = values => ({ type: Constants.SET_FORM_VALUES, payload: values })\n\nexport const reset = () => ({ type: Constants.RESET_FORM_REDUCER })\n","/* constants */\nimport Constants from './constants'\n\nexport const setString = string => ({ type: Constants.SET_NEW_TERMINAL_STRING, payload: string })\n\nexport const reset = () => ({ type: Constants.RESET_TERMINAL_REDUCER })\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\n/* API's */\nimport GAEApi from '@api/gae'\n\n/* Components */\nimport Input from '@components/Input/Input'\nimport Button from '@components/Button/Button'\nimport Select from '@components/Select/Select'\n\n/* Actions */\nimport * as FormActions from '@reducers/form/actions'\nimport * as TerminalActions from '@reducers/terminal/actions'\n\nimport './Form.scss'\n\nfunction Form({ dispatch, type, name, value }) {\n    const getCallData = () => {\n        switch (type) {\n            case 'set':\n                return `set?name=${name}&value=${value}`\n            case 'get':\n                return `get?name=${name}`\n            case 'unset':\n                return `unset?name=${name}`\n            case 'undo':\n                return `undo`\n            case 'redo':\n                return `redo`\n            case 'numequalto':\n                return `numequalto?value=${value}`\n            case 'end':\n                return `end`\n\n            default:\n                // handle error\n                return null\n        }\n    }\n\n    const handleSubmit = async () => {\n        const callData = getCallData()\n\n        dispatch(TerminalActions.setString(`Sending request: ${callData}`))\n        setTimeout(() => dispatch(TerminalActions.setString(`Waiting for response...`)), 20)\n        const data = await GAEApi.get(callData)\n        dispatch(TerminalActions.setString(data))\n    }\n\n    return (\n        <div className=\"form-container\">\n            <Select\n                value={type}\n                options={['set', 'get', 'unset', 'numequalto', 'undo', 'redo', 'end']}\n                onChange={e => dispatch(FormActions.setValues({ type: e.target.value }))}\n            />\n            <Input placeholder=\"name\" value={name} onChange={e => dispatch(FormActions.setValues({ name: e.target.value }))} />{' '}\n            <Input placeholder=\"value\" value={value} onChange={e => dispatch(FormActions.setValues({ value: e.target.value }))} />\n            <Button text=\"Send\" onClick={handleSubmit} />\n        </div>\n    )\n}\n\nForm.propTypes = {\n    type: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    type: state.form.type,\n    name: state.form.name,\n    value: state.form.value,\n})\n\nexport default connect(mapStateToProps)(Form)\n","import React from 'react'\nimport PropType from 'prop-types'\n\nconst Image = ({ src, className, alt }) => <img className={`img ${className}`} src={src} alt={alt} />\n\nImage.propTypes = {\n    src: PropType.string,\n    className: PropType.string,\n    alt: PropType.string,\n}\n\nImage.defaultProps = {\n    src: '',\n    className: '',\n    alt: 'image',\n}\n\nexport default Image\n","import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport { useSpring, animated } from 'react-spring'\nimport PropTypes from 'prop-types'\n\nimport './Terminal.scss'\n\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.1]\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n\nconst Terminal = ({ strings }) => {\n    const endRef = useRef(null)\n    const [springProps, setSpringProps] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 100, tension: 200, friction: 300 } }))\n\n    useEffect(() => {\n        if (endRef.current.scrollIntoView) endRef.current.scrollIntoView({ behavior: 'smooth' })\n    }, [strings])\n\n    return (\n        <animated.div\n            className=\"terminal-container\"\n            onMouseMove={({ clientX: x, clientY: y }) => setSpringProps({ xys: calc(x, y) })}\n            onMouseLeave={() => setSpringProps({ xys: [0, 0, 1] })}\n            style={{ transform: springProps.xys.interpolate(trans) }}\n        >\n            <>\n                {strings.map((str, i) => (\n                    // eslint-disable-next-line react/no-array-index-key\n                    <span key={`${str}-${i}`} className=\"line\">\n                        $ {str}\n                    </span>\n                ))}\n                <span className=\"line\" ref={endRef}>\n                    $ <span className=\"blink\"></span>\n                </span>\n            </>\n        </animated.div>\n    )\n}\n\nTerminal.propTypes = {\n    strings: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nconst mapStateToProps = state => ({\n    strings: state.terminal.strings,\n})\n\nexport default connect(mapStateToProps)(Terminal)\n","import React, { useEffect, useCallback } from 'react'\nimport Store from '@redux/store'\n\n/* Components */\nimport Form from '@containers/Form/Form'\nimport Image from '@components/Image/Image'\nimport Terminal from '@containers/Terminal/Terminal'\n\n/* Actions */\nimport * as TerminalActions from '@reducers/terminal/actions'\n\nimport './App.scss'\n\nconst App = () => {\n    const initTerminal = useCallback(() => {\n        setTimeout(() => Store.dispatch(TerminalActions.setString('Connecting...')), 300)\n        setTimeout(() => Store.dispatch(TerminalActions.setString('Welcome to the Datastore!')), 1000)\n        setTimeout(() => Store.dispatch(TerminalActions.setString('--------------------------------')), 1100)\n    }, [])\n\n    useEffect(() => {\n        initTerminal()\n    }, [initTerminal])\n\n    return (\n        <div className=\"app-page container\">\n            <Image src=\"https://www.guidance.com/hs-fs/hubfs/ISP%20logo%20new.png\" className=\"logo\" />\n            <Form />\n            <Terminal />\n        </div>\n    )\n}\n\nexport default App\n"],"sourceRoot":""}